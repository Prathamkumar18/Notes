#Apache Nifi:
- framework for managing the dataflows.(btw the sys.)
(realtime ETL,data format conversion,routing)

#
.DataFlow- movement of data from src to dest.
.DataPipeLine-movement of data from src to dest with transformation.(batch/streaming data)
.ETL-Extraction Transformation Load (Batch data)

#Nifi Terminology:
1)FlowFile(FF)-(data file)comprises of 2 parts- content(data) and attribute(k-v pair like filename,date,..).FF are pass by ref.
2)Processor(P)- Used for processing flowFile. P1->FF1->P2->FF2->..Pn
3)Connector(C)-(link btw processor)(acts like Queue,order of processing FF). P1->C(ff1,ff2,..ffn)->P2.  (FF expiration, priority,etc can be set)

#Categorization of processors:
.DataIngestion:GetFile,GetFTP,GetSFTP,GetHTTP,GetHDFS,GetKafka.
.DataTransformation:ReplaceText,JoltTransformJSON.
.SendingData:PutFile,PutFTP,PutKafka,PutEmail.
.Routing and Mediation:RouteOnAttribute,RouteOnContent.
.AttributeExtraction:ExtractText,ExtractJsonPath,LogAttribute,UpdateAttribute.
.DatabaseAccess:ExecuteSQL,ConvertJSONToSQL,ListDatabaseTable.
.System Interaction:ExecuteProcess
.SplittingAndAggregation:SplitText,SplitJson,SplitXml,MergeContent.
.HTTP: GetHTTP,ListenHTTP,PostHTTP
.AWS:FetchS3Object,PutS3Object,PutSNS,GetSQS

#BackPressure happens when the object thresold or data thresold is reached
.Object thresold(at max 10,000- FlowFiles can be present in the queue for processing) and DataThresold(at max 1GB data should be processed).Once the threshold value is reached, the connector doesnâ€™t allow any further flow files or messages to get build up.

#
.Penalty duration:Time for which the FF should be penalized(if not processed)
.Yield duration:Time for which the process will not be scheduled.
.Bulletin level:Level at which the processor will generate FF.(Warn,debug,info,error)
.DataProvinence: To debug the dataflow in production.

#Scheduling Strategy:
.Timer driven and Cron driven.

#
.To use the attribute of other processor use ${}
.To select area use shift key

#
.Process group- used for grouping the processors.
.Input and Output port should be used for receiving and transferring the data.
But both should be in the different process group.
.To create the template, select the processors and then click on create template.
.Funnel can be used when data to sent from multiple processor to a single processor.
.We can also create variables by two ways: 1) in the conf folder using .properties extension and then those property can be accessed by ${} and 2)Right click on canvas and create variables.

#
.custom priority can be set using the updateAttribute processor by adding the property priority (1,a has more priority than 9,z resp.)

#NifiRegistry-used for nifi version management.
.NAR-Nifi Archive

#Custom Processor:
s1: mvn archetype:generate and then give the details like(groupid,artifactid,artifactbasename) and then select nifi-processor.
s2: Then the processor, nar and pom file will be created.
s3: Then write code in the processor file for the processor working.(process descriptors- properties, relationship, onTrigger()).
s4: mvn clean install -Denforcer.skip=true (to generate nar file)
s5: nar file will be generated in nar/target directory ..copy and paste it to nifi lib(nifi restart is req.) or nifi extension (instant use).
s6: Now the custom processor will be available to use.
